name: PR Build Check

on:
  pull_request:
    branches: [main]
    paths:
      - "src/**"
      - "benches/**"
      - "Cargo.toml"
      - "Cargo.lock"
      - ".github/workflows/**"
  push:
    branches: [main]
    paths:
      - "src/**"
      - "benches/**"
      - "Cargo.toml"
      - "Cargo.lock"
      - ".github/workflows/**"

jobs:
  build-check:
    name: Build Sanity Check
    uses: ./.github/workflows/build-reusable.yaml
    with:
      upload_artifacts: false

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-test-
            ${{ runner.os }}-cargo-

      - name: Run tests
        run: cargo test --release

      - name: Run doc tests
        run: cargo test --doc --release

  # clippy:
  #   name: Clippy Analysis
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Set up Rust
  #       uses: dtolnay/rust-toolchain@stable
  #       with:
  #         components: clippy

  #     - name: Cache Rust dependencies
  #       uses: actions/cache@v3
  #       with:
  #         path: |
  #           ~/.cargo/bin/
  #           ~/.cargo/registry/index/
  #           ~/.cargo/registry/cache/
  #           ~/.cargo/git/db/
  #           target/
  #         key: ${{ runner.os }}-cargo-clippy-${{ hashFiles('**/Cargo.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-cargo-clippy-
  #           ${{ runner.os }}-cargo-

  #     - name: Run Clippy
  #       run: cargo clippy --all-targets --all-features -- -D warnings

  fmt:
    name: Format Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Check formatting
        run: cargo fmt --all -- --check
